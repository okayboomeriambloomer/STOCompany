SET schema 'sto';

DROP TABLE IF EXISTS car CASCADE;
DROP TABLE IF EXISTS person CASCADE;
DROP TABLE IF EXISTS repair_station CASCADE;
DROP TABLE IF EXISTS upcoming_service CASCADE;
DROP TABLE IF EXISTS type_of_repair CASCADE;
DROP TABLE IF EXISTS history_of_service CASCADE;
DROP TABLE IF EXISTS admin;

create table sto.car (
                         id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                         brand VARCHAR,
                         gov_number VARCHAR,
                         year date
);

INSERT INTO car(brand, gov_number, year) VALUES ('VAZ', 'О236АН790', '2007-1-1');

create table sto.person (
                            id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                            name VARCHAR,
                            surname VARCHAR,
                            number_phone VARCHAR
);

INSERT INTO person(name, surname, number_phone) VALUES ('Anton', 'Chugunov', '89252855773');

create table sto.type_of_repair (
                                    id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                                    name VARCHAR,
                                    price FLOAT
);

INSERT INTO type_of_repair(name, price) VALUES ('Сход-Развал', 2000.0), ('Замена тормозной жидкости', 1500.0);


CREATE TABLE sto.repair_station (
                                    id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                                    address VARCHAR,
                                    manager_name VARCHAR,
                                    number_phone VARCHAR
);

INSERT INTO repair_station(address, manager_name, number_phone)
VALUES ('улица Пушкина, д.1', 'Александр', '81234567890'), ('улица Лермонтова, д.2', 'Михаил', '81234567890');

CREATE TABLE sto.history_of_service (
                                        id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                                        id_repair_station INT REFERENCES repair_station(id),
                                        id_person INT REFERENCES person(id),
                                        id_car INT REFERENCES car(id),
                                        id_type_of_repair INT REFERENCES type_of_repair,
                                        date timestamp
);

INSERT INTO history_of_service(id_repair_station, id_person, id_car, id_type_of_repair, date) VALUES (1, 1, 1, 1, '1-1-2024');

CREATE TABLE sto.upcoming_service (
                                        id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                                        id_repair_station INT REFERENCES repair_station(id),
                                        id_person INT REFERENCES person(id),
                                        id_car INT REFERENCES car(id),
                                        id_type_of_repair INT REFERENCES type_of_repair,
                                        date timestamp
);

INSERT INTO upcoming_service(id_repair_station, id_person, id_car, id_type_of_repair, date) VALUES (1, 1, 1, 1, '2-2-2024');

CREATE TABLE admin (
    id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    login VARCHAR NOT NULL,
    password VARCHAR NOT NULL,
    role VARCHAR NOT NULL
);

INSERT INTO admin(login, password, role) VALUES ('admin1', '12345', 'ROLE_OWNER');
INSERT INTO admin(login, password, role) VALUES ('admin2', '123456', 'ROLE_MANAGER');